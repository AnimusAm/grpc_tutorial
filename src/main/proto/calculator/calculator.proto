syntax = "proto3";

package calculator;

option java_package = "hr.smilebacksmile.calculator";
option java_multiple_files = true;

message Operands {
    repeated int32 operands = 1;
}

message LargeWholeNumber {
    uint64 number = 1;
}

message SumRequest {
    Operands operands = 1;
}

message SumResponse {
    int64 result = 1;
}

message PrimeFactorsRequest {
    LargeWholeNumber number = 1;
}

message PrimeFactorsResponse {
    LargeWholeNumber factor = 1;
}

message WholeNumberRequest {
    int32 number = 1;
}

message AverageResponse {
    double average = 1;
}

message GlobalMaxResponse {
    int32 max = 1;
}

message SquareRootResponse {
    double root = 1;
}

service CalculatorService {
    // Unary service
    rpc Sum (SumRequest) returns (SumResponse) {};

    // Server streaming service
    rpc CalculatePrimeFactors (PrimeFactorsRequest) returns (stream PrimeFactorsResponse) {};

    // Client streaming service
    rpc CalculateAverage (stream WholeNumberRequest) returns (AverageResponse) {};

    // BiDirectional streaming service
    rpc GlobalMaximum (stream WholeNumberRequest) returns (stream GlobalMaxResponse) {};

    // Unary service with error handling: throws exception if negative number was received
    rpc SquareRoot (WholeNumberRequest) returns (SquareRootResponse) {};
}